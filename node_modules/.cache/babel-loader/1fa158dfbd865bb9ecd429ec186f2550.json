{"ast":null,"code":"var _jsxFileName = \"/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/components/Viewer.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport GLTFLoader from 'three-gltf-loader';\n\nconst OrbitControls = require(\"three-orbit-controls\")(THREE);\n\nclass Viewer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.animate = () => {\n      this.renderScene();\n      this.frameId = window.requestAnimationFrame(this.animate);\n    };\n\n    this.renderScene = () => {\n      this.renderer.render(this.scene, this.camera);\n    };\n\n    this.animate = this.animate.bind(this);\n    this.addObject = this.addObject.bind(this);\n    this.initializeOrbits = this.initializeOrbits.bind(this);\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight; //ADD SCENE\n\n    this.scene = new THREE.Scene(); //ADD CAMERA\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.z = 5; //ADD RENDERER\n\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    this.renderer.setClearColor('#888888');\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement); //ADD ORBIT CONTROL\n\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement); //ADD CUBE\n\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: '#433F81'\n    });\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene.add(this.cube); //ADD OBJECT\n\n    const loader = new GLTFLoader();\n    loader.load('model.gltf', object => {\n      this.scene.add(object.scene);\n    });\n    this.animate();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  addObject(object) {\n    this.scene.add(object);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px'\n      },\n      ref: mount => {\n        this.mount = mount;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/components/Viewer.js"],"names":["React","Component","THREE","GLTFLoader","OrbitControls","require","Viewer","constructor","props","animate","renderScene","frameId","window","requestAnimationFrame","renderer","render","scene","camera","bind","addObject","initializeOrbits","componentDidMount","width","mount","clientWidth","height","clientHeight","Scene","PerspectiveCamera","position","z","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","controls","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","loader","load","object","componentWillUnmount","stop","removeChild"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport GLTFLoader from 'three-gltf-loader';\n\n\nconst OrbitControls = require(\"three-orbit-controls\") (THREE);\n\nclass Viewer extends Component {\n  constructor(props) {\n    super(props);\n    this.animate = this.animate.bind(this);\n    this.addObject = this.addObject.bind(this);\n    this.initializeOrbits = this.initializeOrbits.bind(this);\n  }\n\n  componentDidMount(){\n    const width = this.mount.clientWidth\n    const height = this.mount.clientHeight\n\n    //ADD SCENE\n    this.scene = new THREE.Scene()\n\n    //ADD CAMERA\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    )\n    this.camera.position.z = 5\n  \n\n    //ADD RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setClearColor('#888888')\n    this.renderer.setSize(width, height)\n    this.mount.appendChild(this.renderer.domElement)\n\n    //ADD ORBIT CONTROL\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    //ADD CUBE\n    const geometry = new THREE.BoxGeometry(1, 1, 1)\n    const material = new THREE.MeshBasicMaterial({ color: '#433F81'     })\n    this.cube = new THREE.Mesh(geometry, material)\n    this.scene.add(this.cube)\n\n    //ADD OBJECT\n    const loader = new GLTFLoader();\n      loader.load('model.gltf', (object) => {\n        this.scene.add(object.scene);\n      });\n\n    this.animate();\n\n  }\n\n  componentWillUnmount(){\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  animate = () => {\n   this.renderScene()\n   this.frameId = window.requestAnimationFrame(this.animate)\n }\n\n addObject (object) {\n   this.scene.add(object);\n }\n  renderScene = () => {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n\n  render(){\n    return(\n      <div\n        style={{ width: '400px', height: '400px' }}\n        ref={(mount) => { this.mount = mount }}\n      />\n    )\n  }\n}\n\nexport default Viewer;"]},"metadata":{},"sourceType":"module"}