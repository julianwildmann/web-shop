{"ast":null,"code":"/*\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst $time = Symbol('time');\nconst $duration = Symbol('duration');\n/**\n * The Timer class can be used power delays and animations\n */\n\nclass Timer {\n  /**\n   * Creates a new timer\n   *\n   * @param duration the total duration for the timer\n   */\n  constructor(duration) {\n    this[$duration] = duration;\n    this[$time] = 0;\n  }\n  /**\n   * total time incremented by the tick method. time is initialized to 0\n   */\n\n\n  get time() {\n    return this[$time];\n  }\n  /**\n   * a calculation of `time / duration` which can be used for animations\n   */\n\n\n  get timeScale() {\n    return this[$time] / this[$duration];\n  }\n  /**\n   * duration of the timer\n   */\n\n\n  get duration() {\n    return this[$duration];\n  }\n  /**\n   * whether the timer has run fully or stop has been called\n   */\n\n\n  get hasStopped() {\n    return this[$time] >= this[$duration];\n  }\n  /**\n   * reset the time back to 0\n   */\n\n\n  reset() {\n    this[$time] = 0;\n  }\n  /**\n   * sets time to duration meaning the timer has completed and hasStopped will return true\n   */\n\n\n  stop() {\n    this[$time] = this[$duration];\n  }\n  /**\n   * pass deltaTime to the tick method to tick/increment the timer forward\n   *\n   * @param deltaTime delta time since last tick was called\n   */\n\n\n  tick(deltaTime) {\n    this[$time] += deltaTime;\n\n    if (this.time >= this[$duration]) {\n      this[$time] = this[$duration];\n    }\n  }\n\n}\n\nexport default Timer;","map":null,"metadata":{},"sourceType":"module"}