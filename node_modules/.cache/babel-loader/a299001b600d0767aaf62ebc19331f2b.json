{"ast":null,"code":"var _jsxFileName = \"/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/components/Viewer.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport GLTFLoader from \"./GLTFLoader\";\nGLTFLoader(THREE);\n\nclass Viewer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.start = () => {\n      if (!this.frameId) {\n        this.frameId = requestAnimationFrame(this.animate);\n      }\n    };\n\n    this.stop = () => {\n      cancelAnimationFrame(this.frameId);\n    };\n\n    this.animate = () => {\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderScene();\n      this.frameId = window.requestAnimationFrame(this.animate);\n    };\n\n    this.renderScene = () => {\n      this.renderer.render(this.scene, this.camera);\n    };\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight; //ADD SCENE\n\n    this.scene = new THREE.Scene(); //ADD CAMERA\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.z = 4; //ADD RENDERER\n\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    this.renderer.setClearColor('#000000');\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement); //ADD CUBE\n\n    this.Three = THREE;\n    this.loader = new THREE.GLTFLoader();\n    this.loader.load(\"BlenderFinal.gltf\", gltf => {\n      this.scene.add(glft.scene);\n    });\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px'\n      },\n      ref: mount => {\n        this.mount = mount;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/components/Viewer.js"],"names":["React","Component","THREE","GLTFLoader","Viewer","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","cube","rotation","x","y","renderScene","window","renderer","render","scene","camera","componentDidMount","width","mount","clientWidth","height","clientHeight","Scene","PerspectiveCamera","position","z","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","Three","loader","load","gltf","add","glft","componentWillUnmount","removeChild"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACAA,UAAU,CAACD,KAAD,CAAV;;AAIA,MAAME,MAAN,SAAqBH,SAArB,CAA8B;AAAA;AAAA;;AAAA,SAqC9BI,KArC8B,GAqCtB,MAAM;AACV,UAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,aAAKA,OAAL,GAAeC,qBAAqB,CAAC,KAAKC,OAAN,CAApC;AACD;AACF,KAzC2B;;AAAA,SA2C9BC,IA3C8B,GA2CvB,MAAM;AACTC,MAAAA,oBAAoB,CAAC,KAAKJ,OAAN,CAApB;AACD,KA7C2B;;AAAA,SA8C9BE,OA9C8B,GA8CpB,MAAM;AACb,WAAKG,IAAL,CAAUC,QAAV,CAAmBC,CAAnB,IAAwB,IAAxB;AACA,WAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAnB,IAAwB,IAAxB;AACA,WAAKC,WAAL;AACA,WAAKT,OAAL,GAAeU,MAAM,CAACT,qBAAP,CAA6B,KAAKC,OAAlC,CAAf;AACD,KAnD4B;;AAAA,SAqD9BO,WArD8B,GAqDhB,MAAM;AAClB,WAAKE,QAAL,CAAcC,MAAd,CAAqB,KAAKC,KAA1B,EAAiC,KAAKC,MAAtC;AACD,KAvD6B;AAAA;;AAC5BC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,WAAzB;AACA,UAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWG,YAA1B,CAFiB,CAIjB;;AACA,SAAKP,KAAL,GAAa,IAAIjB,KAAK,CAACyB,KAAV,EAAb,CALiB,CAOjB;;AACA,SAAKP,MAAL,GAAc,IAAIlB,KAAK,CAAC0B,iBAAV,CACZ,EADY,EAEZN,KAAK,GAAGG,MAFI,EAGZ,GAHY,EAIZ,IAJY,CAAd;AAMA,SAAKL,MAAL,CAAYS,QAAZ,CAAqBC,CAArB,GAAyB,CAAzB,CAdiB,CAgBjB;;AACA,SAAKb,QAAL,GAAgB,IAAIf,KAAK,CAAC6B,aAAV,CAAwB;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAxB,CAAhB;AACA,SAAKf,QAAL,CAAcgB,aAAd,CAA4B,SAA5B;AACA,SAAKhB,QAAL,CAAciB,OAAd,CAAsBZ,KAAtB,EAA6BG,MAA7B;AACA,SAAKF,KAAL,CAAWY,WAAX,CAAuB,KAAKlB,QAAL,CAAcmB,UAArC,EApBiB,CAsBjB;;AACA,SAAKC,KAAL,GAAanC,KAAb;AACA,SAAKoC,MAAL,GAAc,IAAIpC,KAAK,CAACC,UAAV,EAAd;AACA,SAAKmC,MAAL,CAAYC,IAAZ,CAAiB,mBAAjB,EAAuCC,IAAD,IAAU;AAC9C,WAAKrB,KAAL,CAAWsB,GAAX,CAAeC,IAAI,CAACvB,KAApB;AACD,KAFD;AAGA,SAAKd,KAAL;AACD;;AAEHsC,EAAAA,oBAAoB,GAAE;AAClB,SAAKlC,IAAL;AACA,SAAKc,KAAL,CAAWqB,WAAX,CAAuB,KAAK3B,QAAL,CAAcmB,UAArC;AACD;;AAsBHlB,EAAAA,MAAM,GAAE;AACJ,WACE;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE,OAAT;AAAkBG,QAAAA,MAAM,EAAE;AAA1B,OADT;AAEE,MAAA,GAAG,EAAGF,KAAD,IAAW;AAAE,aAAKA,KAAL,GAAaA,KAAb;AAAoB,OAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAhE2B;;AAmE9B,eAAenB,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport * as THREE from 'three';\nimport GLTFLoader from \"./GLTFLoader\";\nGLTFLoader(THREE);\n\n\n\nclass Viewer extends Component{\n  componentDidMount(){\n    const width = this.mount.clientWidth\n    const height = this.mount.clientHeight\n\n    //ADD SCENE\n    this.scene = new THREE.Scene()\n\n    //ADD CAMERA\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    )\n    this.camera.position.z = 4\n\n    //ADD RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setClearColor('#000000')\n    this.renderer.setSize(width, height)\n    this.mount.appendChild(this.renderer.domElement)\n\n    //ADD CUBE\n    this.Three = THREE;\n    this.loader = new THREE.GLTFLoader();\n    this.loader.load(\"BlenderFinal.gltf\", (gltf) => {\n      this.scene.add(glft.scene);\n    });\n    this.start()\n  }\n\ncomponentWillUnmount(){\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\nstart = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n    }\n  }\n\nstop = () => {\n    cancelAnimationFrame(this.frameId)\n  }\nanimate = () => {\n   this.cube.rotation.x += 0.01\n   this.cube.rotation.y += 0.01\n   this.renderScene()\n   this.frameId = window.requestAnimationFrame(this.animate)\n }\n\nrenderScene = () => {\n  this.renderer.render(this.scene, this.camera)\n}\n\nrender(){\n    return(\n      <div\n        style={{ width: '400px', height: '400px' }}\n        ref={(mount) => { this.mount = mount }}\n      />\n    )\n  }\n}\n\nexport default Viewer;"]},"metadata":{},"sourceType":"module"}