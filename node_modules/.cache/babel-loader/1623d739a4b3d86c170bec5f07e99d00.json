{"ast":null,"code":"var _jsxFileName = \"/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Gallery from \"./components/Gallery\";\nimport Buttons from \"./components/Buttons\";\nimport Description from \"./components/Description\";\n\nclass App extends Component {\n  render() {\n    function getMobileOperatingSystem() {\n      var userAgent = navigator.userAgent || navigator.vendor || window.opera; // Windows Phone must come first because its UA also contains \"Android\"\n\n      if (/windows phone/i.test(userAgent)) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }), React.createElement(Gallery, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }), React.createElement(Buttons, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }), React.createElement(Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        })));\n        return \"This experiment only works on iOS12 devices. Please use an Apple device instead\";\n      }\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/App.js"],"names":["React","Component","Header","Gallery","Buttons","Description","App","render","getMobileOperatingSystem","userAgent","navigator","vendor","window","opera","test"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,MAAM,GAAG;AACP,aAASC,wBAAT,GAAoC;AAClC,UAAIC,SAAS,GAAGC,SAAS,CAACD,SAAV,IAAuBC,SAAS,CAACC,MAAjC,IAA2CC,MAAM,CAACC,KAAlE,CADkC,CAG9B;;AACF,UAAI,iBAAiBC,IAAjB,CAAsBL,SAAtB,CAAJ,EAAsC;AAClC,eACA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN,EAEM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFN,EAGM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHN,EAIM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJN,CADF,CADA;AAWJ,eAAO,iFAAP;AACC;AACJ;AACF;;AArByB;;AAwB5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Gallery from \"./components/Gallery\";\nimport Buttons from \"./components/Buttons\";\nimport Description from \"./components/Description\";\n\n\nclass App extends Component {\n  render() {\n    function getMobileOperatingSystem() {\n      var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    \n          // Windows Phone must come first because its UA also contains \"Android\"\n        if (/windows phone/i.test(userAgent)) {\n            return (\n            <div className=\"App\">\n              <div className=\"Container\">\n                    <Header />\n                    <Gallery />\n                    <Buttons />\n                    <Description />\n              </div>\n            </div>\n          );\n              \n        return \"This experiment only works on iOS12 devices. Please use an Apple device instead\";\n        }\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}