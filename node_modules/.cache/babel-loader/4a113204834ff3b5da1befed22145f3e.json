{"ast":null,"code":"var _jsxFileName = \"/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/components/GalleryExtended.js\";\nimport React from 'react';\nimport AliceCarousel from 'react-alice-carousel';\nimport \"react-alice-carousel/lib/alice-carousel.css\";\n\nclass GalleryExtended extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.items = [require(\"./img/product-image-11.jpg\"), require(\"./img/product-image-21.jpg\"), require(\"./img/product-image-31.jpg\"), require(\"./img/product-image-71.jpg\"), require(\"./img/product-image-81.jpg\")];\n    this.state = {\n      currentIndex: 0,\n      responsive: {\n        600: {\n          items: 1\n        },\n        1024: {\n          items: 3\n        }\n      },\n      galleryItems: this.galleryItems()\n    };\n\n    this.slideTo = i => this.setState({\n      currentIndex: i\n    });\n\n    this.onSlideChanged = e => this.setState({\n      currentIndex: e.item\n    });\n\n    this.slideNext = () => this.setState({\n      currentIndex: this.state.currentIndex + 1\n    });\n\n    this.slidePrev = () => this.setState({\n      currentIndex: this.state.currentIndex - 1\n    });\n\n    this.thumbItem = (item, i) => React.createElement(\"span\", {\n      onClick: () => this.slideTo(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item,\n      alt: \"productimage+i\",\n      id: \"responsive-thumbnail-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n  // Mappe die image Elemente in der Gallery mit den Objekten im Array\n  galleryItems() {\n    return this.items.map(i => React.createElement(\"img\", {\n      key: i,\n      src: i,\n      alt: \"productimage+i\",\n      id: \"responsive-gallery-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          galleryItems = _this$state.galleryItems,\n          responsive = _this$state.responsive,\n          currentIndex = _this$state.currentIndex;\n    return (// Definiere die Features der Gallery und erstelle eine Liste mit Thumbnail-Bildern\n      React.createElement(\"div\", {\n        id: \"gallery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(AliceCarousel, {\n        dotsDisabled: false,\n        buttonsDisabled: true,\n        items: galleryItems,\n        responsive: responsive,\n        slideToIndex: currentIndex,\n        onSlideChanged: this.onSlideChanged,\n        infinite: false,\n        keysControlDisabled: false,\n        playButtonEnabled: false,\n        autoPlay: false,\n        showSlideIndex: true,\n        preventEventOnTouchMove: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        sid: \"thumnails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.items.map(this.thumbItem))))\n    );\n  }\n\n}\n\nexport default GalleryExtended;\n/* Button controls\n<button onClick={() => this.slidePrev()}>Vorheriges Bild</button>\n<button onClick={() => this.slideNext()}>Nächstes Bild</button>\n*/","map":{"version":3,"sources":["/Users/julianwildmann/Documents/01_Studium/LMU/04_Master_Thesis/Repository/online-shop/src/components/GalleryExtended.js"],"names":["React","AliceCarousel","GalleryExtended","Component","items","require","state","currentIndex","responsive","galleryItems","slideTo","i","setState","onSlideChanged","e","item","slideNext","slidePrev","thumbItem","map","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AliceCarousel from 'react-alice-carousel'\nimport \"react-alice-carousel/lib/alice-carousel.css\"\n \nclass GalleryExtended extends React.Component {\n  // Definiere Array in welchem die Produktbilder gespeichert werden\n  items = [\n      require(\"./img/product-image-11.jpg\"),\n      require(\"./img/product-image-21.jpg\"),\n      require(\"./img/product-image-31.jpg\"),\n      require(\"./img/product-image-71.jpg\"),\n      require(\"./img/product-image-81.jpg\"),\n];\n\n  // Starte Index bei 0, Zeige ein bzw drei Hero Bilder je nach Bildschirmgröße\n  state = {\n    currentIndex: 0,\n    responsive: { 600: { items: 1 }, 1024: {items: 3}},\n    galleryItems: this.galleryItems(),\n  }\n \n  slideTo = (i) => this.setState({ currentIndex: i })\n \n  onSlideChanged = (e) => this.setState({ currentIndex: e.item })\n \n  slideNext = () => this.setState({ currentIndex: this.state.currentIndex + 1 })\n \n  slidePrev = () => this.setState({ currentIndex: this.state.currentIndex - 1 })\n \n  thumbItem = (item, i) => <span onClick={() => this.slideTo(i)}><img src={item} alt=\"productimage+i\" id=\"responsive-thumbnail-image\"></img></span>\n \n  // Mappe die image Elemente in der Gallery mit den Objekten im Array\n  galleryItems() {\n    return this.items.map((i) => <img key={i} src={i} alt=\"productimage+i\" id=\"responsive-gallery-image\"></img>)\n  }\n \n  render() {\n    const { galleryItems, responsive, currentIndex } = this.state\n    return (\n      // Definiere die Features der Gallery und erstelle eine Liste mit Thumbnail-Bildern\n      <div id=\"gallery\">\n        <AliceCarousel\n          dotsDisabled={false}\n          buttonsDisabled={true}\n          items={galleryItems}\n          responsive={responsive}\n          slideToIndex={currentIndex}\n          onSlideChanged={this.onSlideChanged}\n          infinite={false}\n          keysControlDisabled={false}\n          playButtonEnabled={false}\n          autoPlay={false}\n          showSlideIndex={true}\n          preventEventOnTouchMove={false}\n        /> \n\n        <div>\n          <ul sid=\"thumnails\">{this.items.map(this.thumbItem)}</ul>\n      </div>\n\n      </div>\n      \n    )\n  }\n}\n\n\nexport default GalleryExtended;\n\n/* Button controls\n<button onClick={() => this.slidePrev()}>Vorheriges Bild</button>\n<button onClick={() => this.slideNext()}>Nächstes Bild</button>\n*/\n"]},"metadata":{},"sourceType":"module"}