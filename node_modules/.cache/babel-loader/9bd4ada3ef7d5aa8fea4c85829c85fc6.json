{"ast":null,"code":"/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { property } from 'lit-element';\nimport { $container, $scene } from '../model-viewer-base.js';\nconst $showMlModel = Symbol('showMlModel');\nconst $hideMlModel = Symbol('hideMlModel');\nconst $isHeliosBrowser = Symbol('isHeliosBrowser');\nconst $mlModel = Symbol('mlModel'); // NOTE(cdata): In tests, this seemed to line the hologram up with the scale of\n// an inline rendering in WebGL. Probably needs some tweaking, and possibly even\n// user-configuration, before we perfect this:\n\nconst DEFAULT_HOLOGRAM_INLINE_SCALE = 0.65; // NOTE(cdata): This probably needs to scale proportionally with the dimensions\n// of the inline model, but we need more experimentation to decide how that\n// should work:\n\nconst DEFAULT_HOLOGRAM_Z_OFFSET = '500px';\n/**\n * In order to use Magic Leap support, please include prismatic.js in your\n * page. If you do not include prismatic.js, Magic Leap support will not work.\n *\n * @see https://www.npmjs.com/package/@magicleap/prismatic\n */\n\nexport const MagicLeapMixin = ModelViewerElement => {\n  var _a, _b;\n\n  class MagicLeapModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.magicLeap = false; // NOTE(cdata): Check at construction time because the check is cheap\n      // and it makes testing easier\n\n      this[_a] = self.mlWorld != null;\n      this[_b] = null;\n    }\n\n    updated(changedProperties) {\n      super.updated(changedProperties);\n\n      if (!this[$isHeliosBrowser]) {\n        return;\n      }\n\n      if (!(changedProperties.has('magicLeap') || changedProperties.has('src'))) {\n        return;\n      }\n\n      const scene = this[$scene];\n\n      if (this.magicLeap) {\n        const hasMlModel = !!customElements.get('ml-model');\n\n        if (!hasMlModel) {\n          console.warn('<ml-model> is not registered. Is prismatic.js loaded?');\n        }\n\n        scene.pause();\n        this[$container].setAttribute('style', 'display: none;');\n        this[$showMlModel]();\n\n        if (changedProperties.has('src') && this.src && this.src !== this[$mlModel].getAttribute('src')) {\n          this[$mlModel].setAttribute('src', this.src);\n        }\n      } else {\n        this[$hideMlModel]();\n        scene.resume();\n        this[$container].removeAttribute('style');\n      }\n    }\n\n    [(_a = $isHeliosBrowser, _b = $mlModel, $showMlModel)]() {\n      if (this[$mlModel] == null) {\n        this[$mlModel] = document.createElement('ml-model');\n        this[$mlModel].setAttribute('style', 'display: block; top: 0; left: 0; width: 100%; height: 100%'); // @see https://creator.magicleap.com/learn/guides/prismatic-getting-started\n\n        this[$mlModel].setAttribute('model-scale', \"\".concat(DEFAULT_HOLOGRAM_INLINE_SCALE, \" \").concat(DEFAULT_HOLOGRAM_INLINE_SCALE, \" \").concat(DEFAULT_HOLOGRAM_INLINE_SCALE));\n        this[$mlModel].setAttribute('scrollable', 'true');\n        this[$mlModel].setAttribute('z-offset', DEFAULT_HOLOGRAM_Z_OFFSET);\n        this[$mlModel].setAttribute('extractable', 'true');\n        this[$mlModel].setAttribute('extracted-scale', '1');\n        this[$mlModel].setAttribute('environment-lighting', 'color-intensity: 2;');\n\n        if (this.src != null) {\n          this[$mlModel].setAttribute('src', this.src);\n        }\n      }\n\n      this.shadowRoot.appendChild(this[$mlModel]);\n    }\n\n    [$hideMlModel]() {\n      if (this[$mlModel] == null) {\n        return;\n      }\n\n      if (this[$mlModel].parentNode != null) {\n        this[$mlModel].parentNode.removeChild(this[$mlModel]);\n      }\n    }\n\n  }\n\n  __decorate([property({\n    type: Boolean,\n    attribute: 'magic-leap'\n  })], MagicLeapModelViewerElement.prototype, \"magicLeap\", void 0);\n\n  return MagicLeapModelViewerElement;\n};","map":null,"metadata":{},"sourceType":"module"}